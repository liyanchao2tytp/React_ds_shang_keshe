[{"E:\\前端code\\react-admin-blog-master\\src\\index.js":"1","E:\\前端code\\react-admin-blog-master\\src\\serviceWorker.js":"2","E:\\前端code\\react-admin-blog-master\\src\\Pages\\Main.jsx":"3","E:\\前端code\\react-admin-blog-master\\src\\Pages\\Login.jsx":"4","E:\\前端code\\react-admin-blog-master\\src\\Pages\\AdminIndex.jsx":"5","E:\\前端code\\react-admin-blog-master\\src\\config\\apiUrl.js":"6","E:\\前端code\\react-admin-blog-master\\src\\components\\Author.js":"7","E:\\前端code\\react-admin-blog-master\\src\\components\\UsrPower.js":"8","E:\\前端code\\react-admin-blog-master\\src\\components\\EmpList.js":"9","E:\\前端code\\react-admin-blog-master\\src\\components\\SupplierList.js":"10","E:\\前端code\\react-admin-blog-master\\src\\Pages\\AddGoods.jsx":"11","E:\\前端code\\react-admin-blog-master\\src\\Pages\\GoodsList.jsx":"12","E:\\前端code\\react-admin-blog-master\\src\\Pages\\CounterList.jsx":"13","E:\\前端code\\react-admin-blog-master\\src\\Pages\\RecycleList.jsx":"14","E:\\前端code\\react-admin-blog-master\\src\\components\\Descripter.js":"15","E:\\前端code\\react-admin-blog-master\\src\\components\\AuthorSign.js":"16"},{"size":609,"mtime":1608442031528,"results":"17","hashOfConfig":"18"},{"size":5086,"mtime":1603838038000,"results":"19","hashOfConfig":"18"},{"size":413,"mtime":1608450533205,"results":"20","hashOfConfig":"18"},{"size":4652,"mtime":1608269965556,"results":"21","hashOfConfig":"18"},{"size":14023,"mtime":1608464706670,"results":"22","hashOfConfig":"18"},{"size":1158,"mtime":1608113186573,"results":"23","hashOfConfig":"18"},{"size":2105,"mtime":1608098933990,"results":"24","hashOfConfig":"18"},{"size":8148,"mtime":1607331371718,"results":"25","hashOfConfig":"18"},{"size":8487,"mtime":1608035560757,"results":"26","hashOfConfig":"18"},{"size":8437,"mtime":1607399249887,"results":"27","hashOfConfig":"18"},{"size":7104,"mtime":1608032138091,"results":"28","hashOfConfig":"18"},{"size":8046,"mtime":1607227207632,"results":"29","hashOfConfig":"18"},{"size":8534,"mtime":1607171599772,"results":"30","hashOfConfig":"18"},{"size":5682,"mtime":1608103409803,"results":"31","hashOfConfig":"18"},{"size":1321,"mtime":1608098848584,"results":"32","hashOfConfig":"18"},{"size":310,"mtime":1608097669243,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"yge7za",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},"E:\\前端code\\react-admin-blog-master\\src\\index.js",[],["73","74"],"E:\\前端code\\react-admin-blog-master\\src\\serviceWorker.js",[],"E:\\前端code\\react-admin-blog-master\\src\\Pages\\Main.jsx",[],"E:\\前端code\\react-admin-blog-master\\src\\Pages\\Login.jsx",["75","76"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Input, Card, Spin, message } from \"antd\";\r\nimport { KeyOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport \"../static/css/login.css\";\r\nimport servicePath from \"../config/apiUrl\";\r\nimport axios from \"axios\";\r\nimport png from \"../assets/image/hawaii-water-small.png\";\r\n// import setAuthToken from \"../utils/AuthToken\";\r\n\r\n// import Check from \"./Check\";\r\n\r\nexport default function Login(props) {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [passWord, setPassWord] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const checkLogin = () => {\r\n    setIsLoading(true);\r\n    if (!userName) {\r\n      message.error(\"用户名不能为空\");\r\n      setTimeout(() => {\r\n        setIsLoading(false);\r\n      }, 300);\r\n      return false;\r\n    } else if (!passWord) {\r\n      message.error(\"密码不能为空\");\r\n      setTimeout(() => {\r\n        setIsLoading(false);\r\n      }, 300);\r\n      return false;\r\n    }\r\n\r\n    let dataProps = {\r\n      userName: userName,\r\n      passWord: passWord,\r\n    };\r\n    axios({\r\n      method: \"post\",\r\n      url: servicePath.checkLogin,\r\n      data: dataProps,\r\n      withCredentials: true,\r\n    }).then((res) => {\r\n      setIsLoading(false);\r\n      if (res.data.msg === \"success\") {\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        props.history.push(\"/home\");\r\n      } else {\r\n        console.log(res);\r\n        message.error(\"用户名密码错误\");\r\n      }\r\n    });\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 300);\r\n  };\r\n  const EnterLogin = (e) => {\r\n    if (e.keyCode == 13) {\r\n      checkLogin()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      <div>\r\n        {/* <Check /> */}\r\n        <svg\r\n          width=\"0\"\r\n          height=\"0\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n        >\r\n          <filter id=\"water\">\r\n            <feTurbulence\r\n              type=\"fractalNoise\"\r\n              baseFrequency=\".05 .05\"\r\n              numOctaves=\"1\"\r\n              result=\"noise1\"\r\n            ></feTurbulence>\r\n            <feColorMatrix\r\n              in=\"noise1\"\r\n              type=\"hueRotate\"\r\n              values=\"0\"\r\n              result=\"noise2\"\r\n            >\r\n              <animate\r\n                attributeName=\"values\"\r\n                from=\"0\"\r\n                to=\"360\"\r\n                dur=\"1s\"\r\n                repeatCount=\"indefinite\"\r\n              />\r\n            </feColorMatrix>\r\n            <feDisplacementMap\r\n              xChannelSelector=\"R\"\r\n              yChannelSelector=\"G\"\r\n              scale=\"7\"\r\n              in=\"SourceGraphic\"\r\n              in2=\"noise2\"\r\n            />\r\n          </filter>\r\n        </svg>\r\n        <img\r\n          style={{\r\n            width: \"100vw\",\r\n            height: \"100%\",\r\n            position: \"absolute\",\r\n            top: \"-5 vh\",\r\n            left: \"-5 vw\",\r\n            objectFit: \"cover\",\r\n            filter: \"url(#water)\",\r\n            overflow: \"hidden\",\r\n          }}\r\n          src={png}\r\n          alt=\"Hawaiian water crashes against the rocks\"\r\n        />\r\n      </div>\r\n      <div className=\"login-div\">\r\n        <Spin\r\n          tip=\"Loading...\"\r\n          spinning={isLoading}\r\n          style={{ backgroundColor: \"rgb(255,255,255,0.3)\" }}\r\n        >\r\n          <div>\r\n            <Card\r\n              title=\"Login Company System\"\r\n              bordered={true}\r\n              style={{ width: 400, backgroundColor: \"rgb(255,255,255,0.3)\" }}\r\n            >\r\n              <Input\r\n                id=\"userName\"\r\n                size=\"large\"\r\n                placeholder=\"Enter your userName\"\r\n                style={{ margin: \"0 0 1rem 0\" }}\r\n                prefix={<UserOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                onChange={(e) => {\r\n                  setUserName(e.target.value);\r\n                }}\r\n              />\r\n\r\n              <Input.Password\r\n                id=\"password\"\r\n                size=\"large\"\r\n                placeholder=\"Enter your password\"\r\n                prefix={<KeyOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                style={{ margin: \"0 0 1rem 0\" }}\r\n                onChange={(e) => {\r\n                  setPassWord(e.target.value);\r\n                }}\r\n                onKeyDown={(e)=>EnterLogin(e)}\r\n              />\r\n\r\n              <Button type=\"primary\" size=\"large\" block onClick={checkLogin}>\r\n                Login in\r\n              </Button>\r\n            </Card>\r\n          </div>\r\n        </Spin>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","E:\\前端code\\react-admin-blog-master\\src\\Pages\\AdminIndex.jsx",["77","78","79","80","81","82","83"],"E:\\前端code\\react-admin-blog-master\\src\\config\\apiUrl.js",[],"E:\\前端code\\react-admin-blog-master\\src\\components\\Author.js",[],"E:\\前端code\\react-admin-blog-master\\src\\components\\UsrPower.js",[],"E:\\前端code\\react-admin-blog-master\\src\\components\\EmpList.js",["84"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  List,\r\n  Row,\r\n  Col,\r\n  ConfigProvider,\r\n  message,\r\n  Button,\r\n  Space,\r\n  Skeleton,\r\n  Pagination,\r\n  Modal,\r\n  Input,\r\n  Form,\r\n  InputNumber\r\n} from \"antd\";\r\nimport zhCN from \"antd/lib/locale/zh_CN\";\r\nimport \"../static/css/components/EmpList.css\"\r\nimport { DeleteOutlined, EditOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\r\nimport Axios from \"axios\";\r\nimport servicePath from \"../config/apiUrl\";\r\nconst { confirm } = Modal\r\nexport default function EmpList(props) {\r\n  const [list, setList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true); //骨架屏是否加载\r\n  const [visible, setVisible] = useState(false);\r\n  const [refresh, setRef] = useState(0)\r\n  const [form] = Form.useForm();\r\n\r\n  const [empId, setId] = useState(0)                 // 判断是添加还是修改\r\n\r\n  const [num, setNum] = useState()         // 总条数\r\n  const extraI = useRef(0)   //当前第几个\r\n\r\n  useEffect(() => {\r\n    getList()\r\n  }, [refresh]);\r\n  const getList = () => {\r\n    const token = localStorage.getItem('token')\r\n    Axios({\r\n      method: \"get\",\r\n      url: servicePath.getEmp,\r\n      headers: { \"token\": token },\r\n      withCredentials: true,\r\n    }).then((res) => {\r\n      console.log(res.data);\r\n      setList(res.data.empList);\r\n      setNum(res.data.num)\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  const gotoPage = (page, size) => {\r\n    Axios({\r\n      method: \"get\",\r\n      // url: `${servicePath.getEmp}?page=${page}&size=${pageSize}`,\r\n      url: servicePath.getEmp,\r\n      params: {\r\n        page,\r\n        size\r\n      },\r\n      withCredentials: true\r\n    }).then((res) => {\r\n      setList(res.data.empList);\r\n      setIsLoading(false);\r\n    });\r\n    extraI.current = (page - 1) * size\r\n  }\r\n  /**\r\n   * @description: 显示弹窗\r\n   * @param {*}\r\n   * @return {*}\r\n   */\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  /**\r\n   * @description: 关闭弹窗\r\n   * @param {*}\r\n   * @return {*}\r\n   */\r\n  const handleCancel = () => {\r\n    console.log('Clicked cancel button');\r\n    setVisible(false);\r\n  };\r\n  /**\r\n   * @description: 表单提交后的回调函数\r\n   * @param {value} async 表单内键值对对象\r\n   * @return {*}\r\n   */\r\n  const onFinish = async (value) => {\r\n    if (empId) {  // 如果 \r\n      value.id = empId\r\n      await Axios({\r\n        method: \"put\",\r\n        url: servicePath.Emp,\r\n        data: value,\r\n        withCredentials: true\r\n      })\r\n    } else {  // 添加雇员\r\n      await Axios({\r\n        method: \"post\",\r\n        url: servicePath.Emp,\r\n        data: value,\r\n        withCredentials: true\r\n      })\r\n    }\r\n\r\n    setVisible(false)\r\n    form.resetFields();\r\n    refresh ? setRef(0) : setRef(1)\r\n  }\r\n  /**\r\n   * @description: 点击修改后 显示弹窗和表单 \r\n   *                将查询出来的数据于表单绑定\r\n   * @param {*} async\r\n   * @return {*}\r\n   */\r\n  const alterEmp = async (id) => {\r\n    const res = await Axios({\r\n      method: \"get\",\r\n      url: `${servicePath.Emp}/${id}`,\r\n      withCredentials: true,\r\n    })\r\n\r\n    form.setFieldsValue({   // 将查出的值 与表单绑定\r\n      username: res.data.empName,\r\n      phone: res.data.empPhone,\r\n      post: res.data.empPost\r\n    })\r\n\r\n    setId(res.data.empId)\r\n    setVisible(true)\r\n  }\r\n  const delEmp = (id) => {\r\n    confirm({\r\n      title: \"确定要删除该雇员吗？\",\r\n      content: \"删除后，雇员的信息将不能恢复\",\r\n      onOk() {\r\n        Axios({\r\n          method: \"delete\",\r\n          url: servicePath.Emp,\r\n          data: { id },\r\n          withCredentials: true\r\n        }).then(() => refresh ? setRef(0) : setRef(1))\r\n        message.success(\"删除成功\")\r\n      },\r\n      onCancel() {\r\n        message.info(\"取消成功\");\r\n      },\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"添加雇员\"\r\n        visible={visible}\r\n        onCancel={handleCancel}\r\n        footer={null}\r\n      >\r\n        <Form\r\n          layout=\"horizontal\"\r\n          name=\"basic\"\r\n          form={form}\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item\r\n            label=\"用户名\"\r\n            name=\"username\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '请输入雇员姓名!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"手机号\"\r\n            name=\"phone\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '请输入雇员联系方式!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"职位名\"\r\n            name=\"post\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '请输入雇员职位!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n\r\n          <Form.Item {...{ wrapperCol: { offset: 10 } }} style={{ padding: \"2rem 0 0 0\" }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              确定\r\n        </Button>\r\n          </Form.Item>\r\n        </Form>\r\n\r\n      </Modal>\r\n\r\n\r\n      <Row>\r\n        <Col\r\n          span={20}\r\n          offset={2}\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            padding: \"40px 50px 60px 50px\",\r\n            borderRadius: \"25px\",\r\n          }}\r\n        >\r\n          <PlusCircleOutlined\r\n            className=\"add__icon\"\r\n            style={{ color: '#D9D9D9' }}\r\n            onClick={showModal}\r\n          />\r\n          <List\r\n            header={\r\n              <Row className=\"list-div\">\r\n\r\n                <Col span={4}>\r\n                  <b>编号</b>\r\n                </Col>\r\n                <Col span={4}>\r\n                  <b>雇员姓名</b>\r\n                </Col>\r\n                <Col span={6}>\r\n                  <b>手机号</b>\r\n                </Col>\r\n                <Col span={4}>\r\n                  <b>职位</b>\r\n                </Col>\r\n                <Col span={6}>\r\n                  <b>操作</b>\r\n                </Col>\r\n              </Row>\r\n            }\r\n            bordered\r\n            // style={{width:}}\r\n            dataSource={list}\r\n            renderItem={(item, index) => (\r\n              <Skeleton loading={isLoading}>\r\n                <List.Item>\r\n                  <Row className=\"list-div\">\r\n\r\n                    <Col span={4}>\r\n                      <b>{extraI.current + index + 1}</b>\r\n                    </Col>\r\n                    <Col span={4}>\r\n                      <b>{item.empName}</b>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                      <b>{item.empPhone}</b>\r\n                    </Col>\r\n                    <Col span={4}>\r\n                      <b>{item.empPost}</b>\r\n                    </Col>\r\n\r\n                    <Col span={6}>\r\n                      <Space>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          shape=\"round\"\r\n                          onClick={() => {\r\n                            alterEmp(item.empId)\r\n                          }}\r\n                        >\r\n                          <EditOutlined />\r\n                          修改\r\n                        </Button>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          danger\r\n                          shape=\"round\"\r\n                          onClick={() => {\r\n                            delEmp(item.empId);\r\n                          }}\r\n                        >\r\n                          <DeleteOutlined />\r\n                          删除\r\n                        </Button>\r\n                      </Space>\r\n                    </Col>\r\n                  </Row>\r\n                </List.Item>\r\n              </Skeleton>\r\n            )}\r\n          />\r\n\r\n          <ConfigProvider locale={zhCN}>\r\n            <Pagination\r\n              total={num}\r\n              hideOnSinglePage={true}\r\n              showSizeChanger\r\n              showQuickJumper\r\n              showTotal={(total) => `共 ${total} 条`}\r\n              onChange={(page, pageSize) => gotoPage(page, pageSize)}\r\n              style={{ textAlign: \"center\", paddingTop: \"50px\" }}\r\n            />\r\n          </ConfigProvider>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","E:\\前端code\\react-admin-blog-master\\src\\components\\SupplierList.js",[],"E:\\前端code\\react-admin-blog-master\\src\\Pages\\AddGoods.jsx",["85","86","87"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Radio,\r\n  Select,\r\n  InputNumber,\r\n  message,\r\n  Skeleton,\r\n} from \"antd\";\r\nimport Axios from \"axios\";\r\nimport servicePath from \"../config/apiUrl\";\r\nexport default function AddGoods(props) {\r\n  const [componentSize, setComponentSize] = useState(\"default\");\r\n  const [suppliers, setSuppliers] = useState([]);\r\n  const [goodsId, setGoodsId] = useState(0); //  货物ID，如果是 0 说明是增加 ，其他就代表修改\r\n  const [goodsName, setName] = useState(\"\"); //  货物名\r\n  const [goodsPrice, setPrice] = useState(); //  价格\r\n  const [goodsNum, setNum] = useState(); //  数量\r\n  const [sup, setSup] = useState(); // 供应商 id\r\n  const [alarmNum, setAlarm] = useState(); //  警告数量\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const onFormLayoutChange = ({ size }) => {\r\n    setComponentSize(size);\r\n  };\r\n\r\n  var id = props.match.params.id; //获取货物id，如果有就是修改，没有就是插入\r\n\r\n  /**\r\n   * @description: 根据是否存在id判断是插入还是更新\r\n   * @param {*}\r\n   * @return {*}\r\n   */\r\n  useEffect(() => {\r\n    getSupplier();\r\n    if (id) {\r\n      setGoodsId(id);\r\n      getGoodsById(id);\r\n    } else {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      console.log(\"-----sup-----\");\r\n      console.log(sup);\r\n      console.log(\"-----suppliers-----\");\r\n      console.log(suppliers);\r\n    };\r\n  }, []);\r\n  /**\r\n   * @description: 获取所有供货商\r\n   * @param {*}\r\n   * @return {*}\r\n   */\r\n  const getSupplier = async () => {\r\n    const res = await Axios(servicePath.getSupplier);\r\n    console.log(\"---getSupplier---\");\r\n    console.log(res);\r\n    setSuppliers(res.data);\r\n  };\r\n  /**\r\n   * @description: 根据id查询对应的货物\r\n   * @param {id}\r\n   * @return {*}\r\n   */\r\n  const getGoodsById = async (id) => {\r\n    const res = await Axios({\r\n      url: `${servicePath.goods}/${id}`,\r\n      method: \"get\",\r\n      withCredentials: true,\r\n    });\r\n    console.log(res);\r\n\r\n    setPrice(res.data.goodsPrice); // 价格\r\n    setNum(res.data.goodsNum); // 数量\r\n    setName(res.data.goodsName); // 货物名\r\n    setAlarm(res.data.warnNum); // 警告数量\r\n    setSup(res.data.supId);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  /**\r\n   * @description: 表单提交时侯的校验函数\r\n   * @param {*}\r\n   * @return {*}\r\n   */\r\n  const onFinish = (value) => {\r\n    console.log(\"----onFinish----\");\r\n    console.log(value);\r\n    id ? alterGoods(value) : addGoods(value);\r\n  };\r\n  const alterGoods = (value) => {\r\n    value.id = goodsId;\r\n    const res = Axios({\r\n      method: \"put\",\r\n      url: servicePath.goods,\r\n      data: value,\r\n      withCredentials: true,\r\n    });\r\n    props.history.push(\"/home/list\");\r\n  };\r\n  const addGoods = (value) => {\r\n    Axios({\r\n      method: \"post\",\r\n      url: servicePath.goods,\r\n      data: value,\r\n      withCredentials: true,\r\n    })\r\n      .then(() => {\r\n        message.success(\"添加成功\");\r\n        props.history.push(\"/home/list\");\r\n      })\r\n      .catch(() => {\r\n        message.error(\"添加失败\");\r\n      });\r\n  };\r\n\r\n  const selectedSupplier = (value, option) => {\r\n    console.log(option);\r\n    // setSup(value);\r\n    console.log(sup);\r\n  };\r\n  return (\r\n    <div style={{ backgroundColor: \"white\", padding: \"60px 0 40px 0\" }}>\r\n      <Skeleton active loading={isLoading} title paragraph>\r\n        <Form\r\n          onFinish={onFinish}\r\n          labelCol={{ span: 4 }}\r\n          wrapperCol={{ span: 14 }}\r\n          layout=\"horizontal\"\r\n          initialValues={{ size: componentSize }}\r\n          onValuesChange={onFormLayoutChange}\r\n          size={componentSize}\r\n        >\r\n          <Form.Item label=\"表单大小\" name=\"size\">\r\n            <Radio.Group>\r\n              <Radio.Button value=\"small\">小</Radio.Button>\r\n              <Radio.Button value=\"default\">中</Radio.Button>\r\n              <Radio.Button value=\"large\">大</Radio.Button>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"货物名\"\r\n            initialValue={goodsName}\r\n            name=\"goods_name\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"请输入货物名称\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input onChange={(v) => setName(v)} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"价格\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"请设置价格\",\r\n              },\r\n            ]}\r\n          >\r\n            <Form.Item\r\n              noStyle\r\n              name=\"goods_price\"\r\n              initialValue={goodsPrice}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"请设置价格\",\r\n                },\r\n              ]}\r\n            >\r\n              <InputNumber min={0} onChange={(v) => setPrice(v)} />\r\n            </Form.Item>\r\n            <span className=\"antd-form-text\" style={{ margin: \"0 0 0 0.5rem\" }}>\r\n              元\r\n            </span>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"数量\"\r\n            name=\"goods_num\"\r\n            initialValue={goodsNum}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"请输入货物数量\",\r\n              },\r\n            ]}\r\n          >\r\n            <InputNumber min={0} onChange={(v) => setNum(v)} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"供应商\"\r\n            name=\"goods_supplier\"\r\n            initialValue={sup}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"请选择供应商\",\r\n              },\r\n            ]}\r\n          >\r\n            <Select onChange={selectedSupplier}>\r\n              {suppliers.map((v, i) => (\r\n                <Select.Option value={v.supId} key={v.supId}>\r\n                  {v.supName +\r\n                    \"——————\" +\r\n                    v.supContact +\r\n                    \"——————\" +\r\n                    v.supPhone +\r\n                    \"——————\" +\r\n                    v.adress}\r\n                </Select.Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"警告数量\"\r\n            name=\"calarm_num\"\r\n            initialValue={alarmNum}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"请设置警告数量\",\r\n              },\r\n            ]}\r\n          >\r\n            <InputNumber min={0} onChange={(v) => setAlarm(v)} />\r\n          </Form.Item>\r\n          <Form.Item {...{ wrapperCol: { offset: 8 } }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n            >\r\n              确定\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Skeleton>\r\n    </div>\r\n  );\r\n}\r\n","E:\\前端code\\react-admin-blog-master\\src\\Pages\\GoodsList.jsx",[],"E:\\前端code\\react-admin-blog-master\\src\\Pages\\CounterList.jsx",[],"E:\\前端code\\react-admin-blog-master\\src\\Pages\\RecycleList.jsx",["88","89","90","91","92"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  List,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Button,\r\n  Space,\r\n  Skeleton,\r\n  Pagination,\r\n  Badge,\r\n  ConfigProvider,\r\n  Input,\r\n} from \"antd\";\r\nimport zhCN from \"antd/lib/locale/zh_CN\";\r\n\r\nimport axios from \"axios\";\r\nimport servicePath from \"../config/apiUrl\";\r\nimport {\r\n  DeleteOutlined,\r\n  AudioOutlined,\r\n  RollbackOutlined,\r\n} from \"@ant-design/icons\";\r\nimport \"../static/css/GoodsList.css\";\r\nimport \"../static/css/ArticleList.css\";\r\n\r\nconst { confirm } = Modal;\r\nconst { Search } = Input;\r\n\r\nfunction RecycleList(props) {\r\n  const [list, setList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [goodsId, setId] = useState();\r\n  const [refresh, setRef] = useState(0);\r\n  const suffix = (\r\n    <AudioOutlined\r\n      style={{\r\n        fontSize: 16,\r\n        color: \"#1890ff\",\r\n      }}\r\n    />\r\n  );\r\n  useEffect(() => {\r\n    getList();\r\n  }, [refresh]);\r\n  const getList = () => {\r\n    const token = localStorage.getItem('token')\r\n    axios({\r\n      method: \"get\",\r\n      url: servicePath.toRecycle,\r\n      headers:{\"token\":token}\r\n    }).then((res) => {\r\n      setList(res.data);\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * @description: 跳到指定页\r\n   * @param {*}\r\n   * @return {*}\r\n   */\r\n  const gotoPage = () => {};\r\n  /**\r\n   * @description: 将货物放入回收站\r\n   * @param {*}\r\n   * @return {*}\r\n   */\r\n  const delGoods = (id) => {\r\n    confirm({\r\n      title: \"确定要删除这个货物吗？\",\r\n      content: \"删除后，货物信息将无法找回\",\r\n      onOk() {\r\n        axios({\r\n          method: \"delete\",\r\n          url: `${servicePath.goods}`,\r\n          data: { id },\r\n          withCredentials: true,\r\n        }).then((res) => {\r\n          message.success(\"删除成功\");\r\n          getList();\r\n        });\r\n      },\r\n      onCancel() {\r\n        message.info(\"取消成功\");\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * @description: 撤回到货物列表中\r\n   * @param {*}\r\n   * @return {*}\r\n   */\r\n  const ToGoods = (id, deid = 0) => {\r\n    axios({\r\n      method: \"put\",\r\n      url: `${servicePath.toRecycle}`,\r\n      data: {\r\n        id,\r\n        yn_goto_recycle: deid,\r\n      },\r\n      withCredentials: true,\r\n    }).then((res) => {\r\n      message.success(\"撤回成功\");\r\n      getList();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: \"white\",\r\n        padding: \"30px 40px 60px 40px\",\r\n      }}\r\n    >\r\n      <List\r\n        header={\r\n          <Row className=\"list-div\">\r\n            <Col span={2}>\r\n              <b>编号</b>\r\n            </Col>\r\n            <Col span={4}>\r\n              <b>商品名称</b>\r\n            </Col>\r\n            <Col span={3}>\r\n              <b>商品价格</b>\r\n            </Col>\r\n            <Col span={3}>\r\n              <b>商品数量</b>\r\n            </Col>\r\n            <Col span={3}>\r\n              <b>警告数量</b>\r\n            </Col>\r\n            <Col span={5}>\r\n              <b>供应商</b>\r\n            </Col>\r\n            <Col span={4}>\r\n              <b>操作</b>\r\n            </Col>\r\n          </Row>\r\n        }\r\n        bordered\r\n        dataSource={list}\r\n        renderItem={(item, index) => (\r\n          <Skeleton loading={isLoading}>\r\n            <List.Item>\r\n              <Row className=\"list-div\">\r\n                <Col span={2}>\r\n                  <b>{index + 1}</b>\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                  <b>{item.goodsName}</b>\r\n                  {item.goodsNum <= item.warnNum ? (\r\n                    <Badge\r\n                      size=\"small\"\r\n                      title=\"缺少个数\"\r\n                      count={item.warnNum - item.goodsNum}\r\n                      offset={[3, -13]}\r\n                    ></Badge>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Col>\r\n                <Col span={3}>\r\n                  <b>{item.goodsPrice}</b>\r\n                </Col>\r\n                <Col span={3}>\r\n                  <b>{item.goodsNum}</b>\r\n                </Col>\r\n                <Col span={3}>\r\n                  <b>{item.warnNum}</b>\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                  {item.supplier.supName} — {item.supplier.supContact}\r\n                </Col>\r\n                <Col span={4}>\r\n                  <Space>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      shape=\"round\"\r\n                      ghost\r\n                      onClick={() => {\r\n                        ToGoods(item.goodsId);\r\n                      }}\r\n                    >\r\n                      <RollbackOutlined />\r\n                    </Button>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      danger\r\n                      shape=\"round\"\r\n                      onClick={() => {\r\n                        delGoods(item.goodsId);\r\n                      }}\r\n                    >\r\n                      <DeleteOutlined />\r\n                    </Button>\r\n                  </Space>\r\n                </Col>\r\n              </Row>\r\n            </List.Item>\r\n          </Skeleton>\r\n        )}\r\n      />\r\n\r\n      <ConfigProvider locale={zhCN}>\r\n        <Pagination\r\n          total={100}\r\n          hideOnSinglePage={true}\r\n          showSizeChanger\r\n          showQuickJumper\r\n          showTotal={(total) => `共 ${total} 条`}\r\n          onChange={(page, pageSize) => gotoPage(page, pageSize)}\r\n          style={{ textAlign: \"center\", paddingTop: \"40px\" }}\r\n        />\r\n      </ConfigProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecycleList;\r\n","E:\\前端code\\react-admin-blog-master\\src\\components\\Descripter.js",["93","94"],"/*\r\n * @Author: lyc\r\n * @Date: 2020-12-03 19:13:16\r\n * @LastEditors: lyc\r\n * @LastEditTime: 2020-12-16 14:07:28\r\n * @Description: file content\r\n */\r\nimport React, { useContext, useEffect } from \"react\"\r\nimport { Space } from 'antd'\r\nimport { UserOutlined, QqOutlined, HomeOutlined, FieldStringOutlined } from '@ant-design/icons';\r\nimport { DetailContext } from './Author'\r\nexport default () => {\r\n  const user = useContext(DetailContext)\r\n\r\n  return (\r\n    <>\r\n      <div style={{ padding: \"1rem 0 0 0\" }}>\r\n        <Space direction=\"vertical\" size=\"small\">\r\n\r\n          <div style={{ margin: \"0 0 5px 0\" }}>\r\n            {/* 职业 */}\r\n            <UserOutlined style={{ padding: \"0 12px 0 0 \" }} />\r\n            <span>{user.name}</span>\r\n          </div>\r\n          <div style={{ margin: \"0 0 5px 0\" }}>\r\n            <QqOutlined style={{ padding: \"0 12px 0 0 \" }} />\r\n            <span>934781829</span>\r\n          </div>\r\n          <div style={{ margin: \"0 0 5px 0\" }}>\r\n            <FieldStringOutlined style={{ margin: \"0 13px 0 0\" }} />\r\n            <span>{user.career}</span>\r\n          </div>\r\n          <div>\r\n            <HomeOutlined style={{ padding: \"0 12px 0 0 \" }} />\r\n            <span>乌利马尔拉赫蒂妮斯州</span>\r\n          </div>\r\n        </Space>\r\n      </div>\r\n      <b></b>\r\n    </>\r\n  )\r\n}","E:\\前端code\\react-admin-blog-master\\src\\components\\AuthorSign.js",["95"],"/*\r\n * @Author: lyc\r\n * @Date: 2020-12-03 19:20:14\r\n * @LastEditors: lyc\r\n * @LastEditTime: 2020-12-05 21:19:12\r\n * @Description: file content\r\n */\r\n\r\nimport React from \"react\"\r\nexport default () => (\r\n  <>\r\n    <center>\r\n      <h2>Joey</h2>\r\n      <h3>天上灯火，皆为星辰</h3>\r\n    </center>\r\n  </>\r\n)",{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"105","line":57,"column":19,"nodeType":"106","messageId":"107","endLine":57,"endColumn":21},{"ruleId":"100","severity":1,"message":"108","line":220,"column":3,"nodeType":"102","messageId":"103","endLine":220,"endColumn":15},{"ruleId":"100","severity":1,"message":"109","line":237,"column":26,"nodeType":"102","messageId":"103","endLine":237,"endColumn":31},{"ruleId":"100","severity":1,"message":"110","line":241,"column":10,"nodeType":"102","messageId":"103","endLine":241,"endColumn":19},{"ruleId":"100","severity":1,"message":"111","line":253,"column":9,"nodeType":"102","messageId":"103","endLine":253,"endColumn":19},{"ruleId":"112","severity":1,"message":"113","line":257,"column":5,"nodeType":"114","messageId":"115","endLine":270,"endColumn":6},{"ruleId":"112","severity":1,"message":"113","line":282,"column":5,"nodeType":"114","messageId":"115","endLine":292,"endColumn":6},{"ruleId":"112","severity":1,"message":"113","line":297,"column":5,"nodeType":"114","messageId":"115","endLine":304,"endColumn":6},{"ruleId":"100","severity":1,"message":"116","line":15,"column":3,"nodeType":"102","messageId":"103","endLine":15,"endColumn":14},{"ruleId":"117","severity":1,"message":"118","line":44,"column":6,"nodeType":"119","endLine":44,"endColumn":8,"suggestions":"120"},{"ruleId":"117","severity":1,"message":"121","line":53,"column":6,"nodeType":"119","endLine":53,"endColumn":8,"suggestions":"122"},{"ruleId":"100","severity":1,"message":"123","line":98,"column":11,"nodeType":"102","messageId":"103","endLine":98,"endColumn":14},{"ruleId":"100","severity":1,"message":"124","line":29,"column":9,"nodeType":"102","messageId":"103","endLine":29,"endColumn":15},{"ruleId":"100","severity":1,"message":"125","line":34,"column":10,"nodeType":"102","messageId":"103","endLine":34,"endColumn":17},{"ruleId":"100","severity":1,"message":"126","line":34,"column":19,"nodeType":"102","messageId":"103","endLine":34,"endColumn":24},{"ruleId":"100","severity":1,"message":"127","line":35,"column":19,"nodeType":"102","messageId":"103","endLine":35,"endColumn":25},{"ruleId":"100","severity":1,"message":"128","line":36,"column":9,"nodeType":"102","messageId":"103","endLine":36,"endColumn":15},{"ruleId":"100","severity":1,"message":"101","line":8,"column":29,"nodeType":"102","messageId":"103","endLine":8,"endColumn":38},{"ruleId":"129","severity":1,"message":"130","line":12,"column":1,"nodeType":"131","endLine":42,"endColumn":2},{"ruleId":"129","severity":1,"message":"130","line":10,"column":1,"nodeType":"131","endLine":17,"endColumn":2},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'UserOutlined' is defined but never used.","'Sider' is assigned a value but never used.","'collapsed' is assigned a value but never used.","'onCollapse' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'InputNumber' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["134"],"React Hook useEffect has missing dependencies: 'sup' and 'suppliers'. Either include them or remove the dependency array.",["135"],"'res' is assigned a value but never used.","'Search' is assigned a value but never used.","'goodsId' is assigned a value but never used.","'setId' is assigned a value but never used.","'setRef' is assigned a value but never used.","'suffix' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [id]",{"range":"140","text":"141"},"Update the dependencies array to be: [sup, suppliers]",{"range":"142","text":"143"},[1180,1182],"[id]",[1378,1380],"[sup, suppliers]"]