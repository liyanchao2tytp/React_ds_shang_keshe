[{"E:\\project\\大三JavaEE课设\\front-end\\src\\index.js":"1","E:\\project\\大三JavaEE课设\\front-end\\src\\serviceWorker.js":"2","E:\\project\\大三JavaEE课设\\front-end\\src\\Pages\\Main.jsx":"3","E:\\project\\大三JavaEE课设\\front-end\\src\\Pages\\AdminIndex.jsx":"4","E:\\project\\大三JavaEE课设\\front-end\\src\\Pages\\Login.jsx":"5","E:\\project\\大三JavaEE课设\\front-end\\src\\components\\OrderList.js":"6","E:\\project\\大三JavaEE课设\\front-end\\src\\components\\Author.js":"7","E:\\project\\大三JavaEE课设\\front-end\\src\\components\\SupplierList.js":"8","E:\\project\\大三JavaEE课设\\front-end\\src\\components\\EmpList.js":"9","E:\\project\\大三JavaEE课设\\front-end\\src\\components\\UsrPower.js":"10","E:\\project\\大三JavaEE课设\\front-end\\src\\config\\apiUrl.js":"11","E:\\project\\大三JavaEE课设\\front-end\\src\\Pages\\GoodsList.jsx":"12","E:\\project\\大三JavaEE课设\\front-end\\src\\Pages\\AddGoods.jsx":"13","E:\\project\\大三JavaEE课设\\front-end\\src\\Pages\\CounterList.jsx":"14","E:\\project\\大三JavaEE课设\\front-end\\src\\Pages\\RecycleList.jsx":"15","E:\\project\\大三JavaEE课设\\front-end\\src\\components\\AuthorSign.js":"16","E:\\project\\大三JavaEE课设\\front-end\\src\\components\\Descripter.js":"17"},{"size":631,"mtime":1608618515735,"results":"18","hashOfConfig":"19"},{"size":5086,"mtime":1603838038000,"results":"20","hashOfConfig":"19"},{"size":413,"mtime":1608450533205,"results":"21","hashOfConfig":"19"},{"size":14474,"mtime":1623070196011,"results":"22","hashOfConfig":"19"},{"size":4652,"mtime":1608269965556,"results":"23","hashOfConfig":"19"},{"size":6058,"mtime":1608965841116,"results":"24","hashOfConfig":"19"},{"size":2105,"mtime":1608098933990,"results":"25","hashOfConfig":"19"},{"size":8437,"mtime":1607399249887,"results":"26","hashOfConfig":"19"},{"size":8487,"mtime":1608035560757,"results":"27","hashOfConfig":"19"},{"size":9561,"mtime":1623070055595,"results":"28","hashOfConfig":"19"},{"size":1214,"mtime":1608964915052,"results":"29","hashOfConfig":"19"},{"size":8069,"mtime":1608958308436,"results":"30","hashOfConfig":"19"},{"size":7104,"mtime":1608032138091,"results":"31","hashOfConfig":"19"},{"size":21485,"mtime":1609125865303,"results":"32","hashOfConfig":"19"},{"size":5682,"mtime":1608103409803,"results":"33","hashOfConfig":"19"},{"size":310,"mtime":1608097669243,"results":"34","hashOfConfig":"19"},{"size":1321,"mtime":1608098848584,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1m57whr",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"38"},"E:\\project\\大三JavaEE课设\\front-end\\src\\index.js",[],["80","81"],"E:\\project\\大三JavaEE课设\\front-end\\src\\serviceWorker.js",[],"E:\\project\\大三JavaEE课设\\front-end\\src\\Pages\\Main.jsx",[],"E:\\project\\大三JavaEE课设\\front-end\\src\\Pages\\AdminIndex.jsx",["82","83","84","85","86","87"],"import React, { useEffect, useState } from \"react\";\r\nimport { Layout, Menu, Breadcrumb, Modal ,Button} from \"antd\";\r\nimport {\r\n  DesktopOutlined,\r\n  PieChartOutlined,\r\n  FileOutlined,\r\n  UserOutlined,\r\n  UsergroupAddOutlined,\r\n  AppstoreAddOutlined,\r\n  ExportOutlined,\r\n} from \"@ant-design/icons\";\r\nimport \"../static/css/AdminIndex.css\";\r\nimport { Route } from \"react-router-dom\";\r\nimport GoodsList from \"./GoodsList\";\r\nimport RecycleList from \"./RecycleList\";\r\nimport AddGoods from \"./AddGoods\";\r\nimport Author from \"../components/Author\";\r\nimport EmpList from \"../components/EmpList\";\r\nimport SupplierList from \"../components/SupplierList\";\r\nimport CounterList from \"./CounterList\";\r\nimport OrderList from \"../components/OrderList\";\r\nimport UsrPower from \"../components/UsrPower\";\r\nimport Axios from \"axios\";\r\nimport servicePath from \"../config/apiUrl\";\r\nconst { Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nfunction AdminIndex(props) {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  const [visible, setVisible] = useState(false);\r\n  const [power, setPower] = useState(1);\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    Axios.defaults.headers.common[\"token\"] = token;\r\n    Axios({\r\n      method: \"get\",\r\n      url: servicePath.checkLogin,\r\n      headers: { token: token },\r\n    }).then((res) => setPower(res.data));\r\n  }, []);\r\n  const onCollapse = (collapsed) => {\r\n    setCollapsed(collapsed);\r\n  };\r\n  const handleOther = (e) => {\r\n    switch (e.key) {\r\n      case \"usr\":\r\n        props.history.push(\"/home/self\");\r\n        break;\r\n      case \"counter\":\r\n        props.history.push(\"/home/counter\");\r\n        break;\r\n      case \"usrPower\":\r\n        props.history.push(\"/home/power\");\r\n        break;\r\n      case \"order\":\r\n        props.history.push(\"/home/order\");\r\n        break;\r\n      case \"logout\":\r\n        setVisible(true);\r\n        break;\r\n    }\r\n  };\r\n  const handleOk = () => {\r\n    localStorage.removeItem(\"token\");\r\n    props.history.push(\"/\");\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n  };\r\n  // 商品库存管理\r\n  const handleGoodsStore = (e) => {\r\n    switch (e.key) {\r\n      case \"addGoods\":\r\n        props.history.push(\"/home/add\");\r\n        break;\r\n      case \"goodsList\":\r\n        props.history.push(\"/home/list\");\r\n        break;\r\n      case \"recycleList\":\r\n        props.history.push(\"/home/recycle\");\r\n        break;\r\n    }\r\n  };\r\n  // 用户管理\r\n  const handleAdmin = (e) => {\r\n    console.log(e);\r\n    switch (e.key) {\r\n      case \"admin-emp\":\r\n        props.history.push(\"/home/admin/emp\");\r\n        break;\r\n      case \"admin-supplier\":\r\n        props.history.push(\"/home/admin/sup\");\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ minHeight: \"100vh\" }}>\r\n      <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\r\n        <Modal\r\n          title=\"退出\"\r\n          visible={visible}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n        >\r\n          <p>确认要退出员工管理系统吗？</p>\r\n        </Modal>\r\n        <div className=\"logo\" />\r\n       \r\n\r\n        <Menu\r\n          theme=\"dark\"\r\n          defaultSelectedKeys={[\"1\"]}\r\n          mode=\"inline\"\r\n          onClick={handleOther}\r\n        >\r\n          <Menu.Item key=\"1\" icon={<PieChartOutlined />}>\r\n            <span>工作台</span>\r\n          </Menu.Item>\r\n          {/* ------------------------------------------------------------- */}\r\n          {power > 2 ? (\r\n            <SubMenu\r\n              key=\"sub\"\r\n              icon={<DesktopOutlined />}\r\n              title=\"用户管理\"\r\n              onClick={handleAdmin}\r\n            >\r\n              {/* <Menu.Item key=\"admin-emp\">雇员管理</Menu.Item> */}\r\n              <Menu.Item key=\"admin-supplier\">供应商管理</Menu.Item>\r\n            </SubMenu>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {/* \r\n          <Menu.Item key=\"usr\" icon={<UserOutlined />}>\r\n            个人信息\r\n          </Menu.Item> */}\r\n\r\n          {/* ------------------------------------------------------------- */}\r\n          {power > 1 && (\r\n            <>\r\n              <Menu.Item key=\"counter\" icon={<FileOutlined />}>\r\n                <span>柜台管理</span>\r\n              </Menu.Item>\r\n              <SubMenu\r\n                key=\"sub1\"\r\n                icon={<AppstoreAddOutlined />}\r\n                title=\"库存管理\"\r\n                onClick={handleGoodsStore}\r\n              >\r\n                <Menu.Item key=\"addGoods\">添加商品</Menu.Item>\r\n                <Menu.Item key=\"goodsList\">商品列表</Menu.Item>\r\n                <Menu.Item key=\"recycleList\">回收站</Menu.Item>\r\n              </SubMenu>\r\n              {/* <Menu.Item key=\"order\" icon={<FileOutlined />}>\r\n                <span>销售订单</span>\r\n              </Menu.Item> */}\r\n            </>\r\n          )}\r\n          {/* ------------------------------------------------------------- */}\r\n          {power > 3 && (\r\n            <Menu.Item key=\"usrPower\" icon={<UsergroupAddOutlined />}>\r\n              <span>用户权限管理</span>\r\n            </Menu.Item>\r\n          )}\r\n\r\n          <Menu.Item key=\"logout\" icon={<ExportOutlined />}>\r\n            <span>退出登录</span>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout className=\"site-layout\">\r\n        {/* <Header className=\"site-layout-background\" style={{ padding: 0 }} /> */}\r\n        <Content style={{ margin: \"0 16px\" }}>\r\n          <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n            <Breadcrumb.Item>后台管理系统</Breadcrumb.Item>\r\n            <Breadcrumb.Item>工作台</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          <div\r\n            className=\"site-layout-background\"\r\n            style={{ padding: 24, minHeight: 360 }}\r\n          >\r\n            {power > 1 && (\r\n              <>\r\n                <Route path=\"/home/add\" exact component={AddGoods}></Route>\r\n                <Route path=\"/home/list\" exact component={GoodsList}></Route>\r\n                <Route path=\"/home/add/:id\" exact component={AddGoods}></Route>\r\n                <Route\r\n                  path=\"/home/counter\"\r\n                  exact\r\n                  component={CounterList}\r\n                ></Route>\r\n              </>\r\n            )}\r\n\r\n            <Route path=\"/home/self\" exact component={Author}></Route>\r\n\r\n            <Route path=\"/home/recycle\" exact component={RecycleList}></Route>\r\n            {/* <Route path=\"/home/admin/emp\" exact component={EmpList}></Route> */}\r\n            {power > 2 ? (\r\n              <>\r\n                <Route\r\n                  path=\"/home/admin/sup\"\r\n                  exact\r\n                  component={SupplierList}\r\n                ></Route>\r\n                <Route path=\"/home/order\" exact component={OrderList}></Route>\r\n              </>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {power > 3 && (\r\n              <Route path=\"/home/power\" exact component={UsrPower}></Route>\r\n            )}\r\n          </div>\r\n        </Content>\r\n        <Footer style={{ textAlign: \"center\" }}>Ant Design + React</Footer>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AdminIndex;\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { Layout, Menu, Breadcrumb, Modal } from \"antd\";\r\n// import {\r\n//   DesktopOutlined,\r\n//   PieChartOutlined,\r\n//   FileOutlined,\r\n//   UserOutlined,\r\n//   UsergroupAddOutlined,\r\n//   AppstoreAddOutlined,\r\n//   ExportOutlined,\r\n// } from \"@ant-design/icons\";\r\n// import \"../static/css/AdminIndex.css\";\r\n// import { Route } from \"react-router-dom\";\r\n// import GoodsList from \"./GoodsList\";\r\n// import RecycleList from \"./RecycleList\";\r\n// import AddGoods from \"./AddGoods\";\r\n// import Author from \"../components/Author\";\r\n// import EmpList from \"../components/EmpList\";\r\n// import SupplierList from \"../components/SupplierList\";\r\n// import CounterList from \"./CounterList\";\r\n// import UsrPower from \"../components/UsrPower\";\r\n// import Axios from \"axios\";\r\n// import servicePath from \"../config/apiUrl\";\r\n// const { Content, Footer, Sider, Header } = Layout;\r\n// const { SubMenu } = Menu;\r\n\r\n// function AdminIndex(props) {\r\n//   const [collapsed, setCollapsed] = useState(false);\r\n//   const [visible, setVisible] = useState(false);\r\n//   const [power, setPower] = useState(1);\r\n//   useEffect(() => {\r\n//     const token = localStorage.getItem(\"token\");\r\n//     Axios.defaults.headers.common[\"token\"] = token;\r\n//     Axios({\r\n//       method: \"get\",\r\n//       url: servicePath.checkLogin,\r\n//       headers: { token: token },\r\n//     }).then((res) => setPower(res.data));\r\n//   }, []);\r\n//   const onCollapse = (collapsed) => {\r\n//     setCollapsed(collapsed);\r\n//   };\r\n//   const handleOther = (e) => {\r\n//     switch (e.key) {\r\n//       case \"usr\":\r\n//         props.history.push(\"/home/self\");\r\n//         break;\r\n//       case \"counter\":\r\n//         props.history.push(\"/home/counter\");\r\n//         break;\r\n//       case \"usrPower\":\r\n//         props.history.push(\"/home/power\");\r\n//         break;\r\n//       case \"logout\":\r\n//         setVisible(true);\r\n//         break;\r\n//     }\r\n//   };\r\n//   const handleOk = () => {\r\n//     localStorage.removeItem(\"token\");\r\n//     props.history.push(\"/\");\r\n//   };\r\n\r\n//   const handleCancel = () => {\r\n//     setVisible(false);\r\n//   };\r\n//   // 商品库存管理\r\n//   const handleGoodsStore = (e) => {\r\n//     switch (e.key) {\r\n//       case \"addGoods\":\r\n//         props.history.push(\"/home/add\");\r\n//         break;\r\n//       case \"goodsList\":\r\n//         props.history.push(\"/home/list\");\r\n//         break;\r\n//       case \"recycleList\":\r\n//         props.history.push(\"/home/recycle\");\r\n//         break;\r\n//     }\r\n//   };\r\n//   // 用户管理\r\n//   const handleAdmin = (e) => {\r\n//     console.log(e);\r\n//     switch (e.key) {\r\n//       case \"admin-emp\":\r\n//         props.history.push(\"/home/admin/emp\");\r\n//         break;\r\n//       case \"admin-supplier\":\r\n//         props.history.push(\"/home/admin/sup\");\r\n//         break;\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Layout style={{ minHeight: \"100vh\" }}>\r\n//       <Header>\r\n//         <div className=\"logo\" />\r\n//         <Menu\r\n//           theme=\"dark\"\r\n//           onClick={handleOther}\r\n//           mode=\"horizontal\"\r\n//           defaultSelectedKeys={[\"2\"]}\r\n//         >\r\n//           <Menu.Item key=\"1\" icon={<PieChartOutlined />}>\r\n//             <span>工作台</span>\r\n//           </Menu.Item>\r\n//           {/* ------------------------------------------------------------- */}\r\n//           {power > 2 && (\r\n//             <SubMenu\r\n//               key=\"sub\"\r\n//               icon={<DesktopOutlined />}\r\n//               title=\"用户管理\"\r\n//               onClick={handleAdmin}\r\n//             >\r\n//               <Menu.Item key=\"admin-emp\">雇员管理</Menu.Item>\r\n//               <Menu.Item key=\"admin-supplier\">供应商管理</Menu.Item>\r\n//             </SubMenu>\r\n//           )}\r\n//           {/*\r\n//           <Menu.Item key=\"usr\" icon={<UserOutlined />}>\r\n//             个人信息\r\n//           </Menu.Item> */}\r\n\r\n//           {/* ------------------------------------------------------------- */}\r\n//           {power > 1 && (\r\n//             <>\r\n//               <Menu.Item key=\"counter\" icon={<FileOutlined />}>\r\n//                 <span>柜台管理</span>\r\n//               </Menu.Item>\r\n//               <SubMenu\r\n//                 key=\"sub1\"\r\n//                 icon={<AppstoreAddOutlined />}\r\n//                 title=\"库存管理\"\r\n//                 onClick={handleGoodsStore}\r\n//               >\r\n//                 <Menu.Item key=\"addGoods\">添加商品</Menu.Item>\r\n//                 <Menu.Item key=\"goodsList\">商品列表</Menu.Item>\r\n//                 <Menu.Item key=\"recycleList\">回收站</Menu.Item>\r\n//               </SubMenu>\r\n//             </>\r\n//           )}\r\n//           {/* ------------------------------------------------------------- */}\r\n//           {power > 3 && (\r\n//             <Menu.Item key=\"usrPower\" icon={<UsergroupAddOutlined />}>\r\n//               <span>用户权限管理</span>\r\n//             </Menu.Item>\r\n//           )}\r\n\r\n//           <Menu.Item key=\"logout\" icon={<ExportOutlined />}>\r\n//             <span>退出登录</span>\r\n//           </Menu.Item>\r\n//         </Menu>\r\n//       </Header>\r\n//       <Modal\r\n//         title=\"退出\"\r\n//         visible={visible}\r\n//         onOk={handleOk}\r\n//         onCancel={handleCancel}\r\n//       >\r\n//         <p>确认要退出员工管理系统吗？</p>\r\n//       </Modal>\r\n//       <div className=\"logo\" />\r\n\r\n//       {/* <Layout className=\"site-layout\"> */}\r\n//       {/* <Header className=\"site-layout-background\" style={{ padding: 0 }} /> */}\r\n//       <Content style={{ margin: \"0 16px\" }}>\r\n//         <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n//           <Breadcrumb.Item>后台管理系统</Breadcrumb.Item>\r\n//           <Breadcrumb.Item>工作台</Breadcrumb.Item>\r\n//         </Breadcrumb>\r\n//         <div\r\n//           className=\"site-layout-background\"\r\n//           style={{ padding: 24, minHeight: 360 }}\r\n//         >\r\n//           {power > 1 ? (\r\n//             <>\r\n//               <Route path=\"/home/add\" exact component={AddGoods}></Route>\r\n//               <Route path=\"/home/list\" exact component={GoodsList}></Route>\r\n//               <Route path=\"/home/add/:id\" exact component={AddGoods}></Route>\r\n//               <Route path=\"/home/counter\" exact component={CounterList}></Route>\r\n//             </>\r\n//           ) : (\r\n//             \"\"\r\n//           )}\r\n\r\n//           <Route path=\"/home/self\" exact component={Author}></Route>\r\n\r\n//           <Route path=\"/home/recycle\" exact component={RecycleList}></Route>\r\n//           <Route path=\"/home/admin/emp\" exact component={EmpList}></Route>\r\n//           {power > 2 ? (\r\n//             <Route\r\n//               path=\"/home/admin/sup\"\r\n//               exact\r\n//               component={SupplierList}\r\n//             ></Route>\r\n//           ) : (\r\n//             \"\"\r\n//           )}\r\n//           {power > 3 ? (\r\n//             <Route path=\"/home/power\" exact component={UsrPower}></Route>\r\n//           ) : (\r\n//             \"\"\r\n//           )}\r\n//         </div>\r\n//       </Content>\r\n//       <Footer style={{ textAlign: \"center\" }}>Ant Design + React</Footer>\r\n//     </Layout>\r\n//     // </Layout>\r\n//   );\r\n// }\r\n\r\n// export default AdminIndex;\r\n","E:\\project\\大三JavaEE课设\\front-end\\src\\Pages\\Login.jsx",["88","89"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Input, Card, Spin, message } from \"antd\";\r\nimport { KeyOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport \"../static/css/login.css\";\r\nimport servicePath from \"../config/apiUrl\";\r\nimport axios from \"axios\";\r\nimport png from \"../assets/image/hawaii-water-small.png\";\r\n// import setAuthToken from \"../utils/AuthToken\";\r\n\r\n// import Check from \"./Check\";\r\n\r\nexport default function Login(props) {\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [passWord, setPassWord] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const checkLogin = () => {\r\n    setIsLoading(true);\r\n    if (!userName) {\r\n      message.error(\"用户名不能为空\");\r\n      setTimeout(() => {\r\n        setIsLoading(false);\r\n      }, 300);\r\n      return false;\r\n    } else if (!passWord) {\r\n      message.error(\"密码不能为空\");\r\n      setTimeout(() => {\r\n        setIsLoading(false);\r\n      }, 300);\r\n      return false;\r\n    }\r\n\r\n    let dataProps = {\r\n      userName: userName,\r\n      passWord: passWord,\r\n    };\r\n    axios({\r\n      method: \"post\",\r\n      url: servicePath.checkLogin,\r\n      data: dataProps,\r\n      withCredentials: true,\r\n    }).then((res) => {\r\n      setIsLoading(false);\r\n      if (res.data.msg === \"success\") {\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        props.history.push(\"/home\");\r\n      } else {\r\n        console.log(res);\r\n        message.error(\"用户名密码错误\");\r\n      }\r\n    });\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 300);\r\n  };\r\n  const EnterLogin = (e) => {\r\n    if (e.keyCode == 13) {\r\n      checkLogin()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      <div>\r\n        {/* <Check /> */}\r\n        <svg\r\n          width=\"0\"\r\n          height=\"0\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n        >\r\n          <filter id=\"water\">\r\n            <feTurbulence\r\n              type=\"fractalNoise\"\r\n              baseFrequency=\".05 .05\"\r\n              numOctaves=\"1\"\r\n              result=\"noise1\"\r\n            ></feTurbulence>\r\n            <feColorMatrix\r\n              in=\"noise1\"\r\n              type=\"hueRotate\"\r\n              values=\"0\"\r\n              result=\"noise2\"\r\n            >\r\n              <animate\r\n                attributeName=\"values\"\r\n                from=\"0\"\r\n                to=\"360\"\r\n                dur=\"1s\"\r\n                repeatCount=\"indefinite\"\r\n              />\r\n            </feColorMatrix>\r\n            <feDisplacementMap\r\n              xChannelSelector=\"R\"\r\n              yChannelSelector=\"G\"\r\n              scale=\"7\"\r\n              in=\"SourceGraphic\"\r\n              in2=\"noise2\"\r\n            />\r\n          </filter>\r\n        </svg>\r\n        <img\r\n          style={{\r\n            width: \"100vw\",\r\n            height: \"100%\",\r\n            position: \"absolute\",\r\n            top: \"-5 vh\",\r\n            left: \"-5 vw\",\r\n            objectFit: \"cover\",\r\n            filter: \"url(#water)\",\r\n            overflow: \"hidden\",\r\n          }}\r\n          src={png}\r\n          alt=\"Hawaiian water crashes against the rocks\"\r\n        />\r\n      </div>\r\n      <div className=\"login-div\">\r\n        <Spin\r\n          tip=\"Loading...\"\r\n          spinning={isLoading}\r\n          style={{ backgroundColor: \"rgb(255,255,255,0.3)\" }}\r\n        >\r\n          <div>\r\n            <Card\r\n              title=\"Login Company System\"\r\n              bordered={true}\r\n              style={{ width: 400, backgroundColor: \"rgb(255,255,255,0.3)\" }}\r\n            >\r\n              <Input\r\n                id=\"userName\"\r\n                size=\"large\"\r\n                placeholder=\"Enter your userName\"\r\n                style={{ margin: \"0 0 1rem 0\" }}\r\n                prefix={<UserOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                onChange={(e) => {\r\n                  setUserName(e.target.value);\r\n                }}\r\n              />\r\n\r\n              <Input.Password\r\n                id=\"password\"\r\n                size=\"large\"\r\n                placeholder=\"Enter your password\"\r\n                prefix={<KeyOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                style={{ margin: \"0 0 1rem 0\" }}\r\n                onChange={(e) => {\r\n                  setPassWord(e.target.value);\r\n                }}\r\n                onKeyDown={(e)=>EnterLogin(e)}\r\n              />\r\n\r\n              <Button type=\"primary\" size=\"large\" block onClick={checkLogin}>\r\n                Login in\r\n              </Button>\r\n            </Card>\r\n          </div>\r\n        </Spin>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","E:\\project\\大三JavaEE课设\\front-end\\src\\components\\OrderList.js",[],"E:\\project\\大三JavaEE课设\\front-end\\src\\components\\Author.js",[],"E:\\project\\大三JavaEE课设\\front-end\\src\\components\\SupplierList.js",[],"E:\\project\\大三JavaEE课设\\front-end\\src\\components\\EmpList.js",["90"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  List,\r\n  Row,\r\n  Col,\r\n  ConfigProvider,\r\n  message,\r\n  Button,\r\n  Space,\r\n  Skeleton,\r\n  Pagination,\r\n  Modal,\r\n  Input,\r\n  Form,\r\n  InputNumber\r\n} from \"antd\";\r\nimport zhCN from \"antd/lib/locale/zh_CN\";\r\nimport \"../static/css/components/EmpList.css\"\r\nimport { DeleteOutlined, EditOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\r\nimport Axios from \"axios\";\r\nimport servicePath from \"../config/apiUrl\";\r\nconst { confirm } = Modal\r\nexport default function EmpList(props) {\r\n  const [list, setList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true); //骨架屏是否加载\r\n  const [visible, setVisible] = useState(false);\r\n  const [refresh, setRef] = useState(0)\r\n  const [form] = Form.useForm();\r\n\r\n  const [empId, setId] = useState(0)                 // 判断是添加还是修改\r\n\r\n  const [num, setNum] = useState()         // 总条数\r\n  const extraI = useRef(0)   //当前第几个\r\n\r\n  useEffect(() => {\r\n    getList()\r\n  }, [refresh]);\r\n  const getList = () => {\r\n    const token = localStorage.getItem('token')\r\n    Axios({\r\n      method: \"get\",\r\n      url: servicePath.getEmp,\r\n      headers: { \"token\": token },\r\n      withCredentials: true,\r\n    }).then((res) => {\r\n      console.log(res.data);\r\n      setList(res.data.empList);\r\n      setNum(res.data.num)\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  const gotoPage = (page, size) => {\r\n    Axios({\r\n      method: \"get\",\r\n      // url: `${servicePath.getEmp}?page=${page}&size=${pageSize}`,\r\n      url: servicePath.getEmp,\r\n      params: {\r\n        page,\r\n        size\r\n      },\r\n      withCredentials: true\r\n    }).then((res) => {\r\n      setList(res.data.empList);\r\n      setIsLoading(false);\r\n    });\r\n    extraI.current = (page - 1) * size\r\n  }\r\n  /**\r\n   * @description: 显示弹窗\r\n   * @param {*}\r\n   * @return {*}\r\n   */\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  /**\r\n   * @description: 关闭弹窗\r\n   * @param {*}\r\n   * @return {*}\r\n   */\r\n  const handleCancel = () => {\r\n    console.log('Clicked cancel button');\r\n    setVisible(false);\r\n  };\r\n  /**\r\n   * @description: 表单提交后的回调函数\r\n   * @param {value} async 表单内键值对对象\r\n   * @return {*}\r\n   */\r\n  const onFinish = async (value) => {\r\n    if (empId) {  // 如果 \r\n      value.id = empId\r\n      await Axios({\r\n        method: \"put\",\r\n        url: servicePath.Emp,\r\n        data: value,\r\n        withCredentials: true\r\n      })\r\n    } else {  // 添加雇员\r\n      await Axios({\r\n        method: \"post\",\r\n        url: servicePath.Emp,\r\n        data: value,\r\n        withCredentials: true\r\n      })\r\n    }\r\n\r\n    setVisible(false)\r\n    form.resetFields();\r\n    refresh ? setRef(0) : setRef(1)\r\n  }\r\n  /**\r\n   * @description: 点击修改后 显示弹窗和表单 \r\n   *                将查询出来的数据于表单绑定\r\n   * @param {*} async\r\n   * @return {*}\r\n   */\r\n  const alterEmp = async (id) => {\r\n    const res = await Axios({\r\n      method: \"get\",\r\n      url: `${servicePath.Emp}/${id}`,\r\n      withCredentials: true,\r\n    })\r\n\r\n    form.setFieldsValue({   // 将查出的值 与表单绑定\r\n      username: res.data.empName,\r\n      phone: res.data.empPhone,\r\n      post: res.data.empPost\r\n    })\r\n\r\n    setId(res.data.empId)\r\n    setVisible(true)\r\n  }\r\n  const delEmp = (id) => {\r\n    confirm({\r\n      title: \"确定要删除该雇员吗？\",\r\n      content: \"删除后，雇员的信息将不能恢复\",\r\n      onOk() {\r\n        Axios({\r\n          method: \"delete\",\r\n          url: servicePath.Emp,\r\n          data: { id },\r\n          withCredentials: true\r\n        }).then(() => refresh ? setRef(0) : setRef(1))\r\n        message.success(\"删除成功\")\r\n      },\r\n      onCancel() {\r\n        message.info(\"取消成功\");\r\n      },\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"添加雇员\"\r\n        visible={visible}\r\n        onCancel={handleCancel}\r\n        footer={null}\r\n      >\r\n        <Form\r\n          layout=\"horizontal\"\r\n          name=\"basic\"\r\n          form={form}\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item\r\n            label=\"用户名\"\r\n            name=\"username\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '请输入雇员姓名!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"手机号\"\r\n            name=\"phone\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '请输入雇员联系方式!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"职位名\"\r\n            name=\"post\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: '请输入雇员职位!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n\r\n          <Form.Item {...{ wrapperCol: { offset: 10 } }} style={{ padding: \"2rem 0 0 0\" }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              确定\r\n        </Button>\r\n          </Form.Item>\r\n        </Form>\r\n\r\n      </Modal>\r\n\r\n\r\n      <Row>\r\n        <Col\r\n          span={20}\r\n          offset={2}\r\n          style={{\r\n            backgroundColor: \"white\",\r\n            padding: \"40px 50px 60px 50px\",\r\n            borderRadius: \"25px\",\r\n          }}\r\n        >\r\n          <PlusCircleOutlined\r\n            className=\"add__icon\"\r\n            style={{ color: '#D9D9D9' }}\r\n            onClick={showModal}\r\n          />\r\n          <List\r\n            header={\r\n              <Row className=\"list-div\">\r\n\r\n                <Col span={4}>\r\n                  <b>编号</b>\r\n                </Col>\r\n                <Col span={4}>\r\n                  <b>雇员姓名</b>\r\n                </Col>\r\n                <Col span={6}>\r\n                  <b>手机号</b>\r\n                </Col>\r\n                <Col span={4}>\r\n                  <b>职位</b>\r\n                </Col>\r\n                <Col span={6}>\r\n                  <b>操作</b>\r\n                </Col>\r\n              </Row>\r\n            }\r\n            bordered\r\n            // style={{width:}}\r\n            dataSource={list}\r\n            renderItem={(item, index) => (\r\n              <Skeleton loading={isLoading}>\r\n                <List.Item>\r\n                  <Row className=\"list-div\">\r\n\r\n                    <Col span={4}>\r\n                      <b>{extraI.current + index + 1}</b>\r\n                    </Col>\r\n                    <Col span={4}>\r\n                      <b>{item.empName}</b>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                      <b>{item.empPhone}</b>\r\n                    </Col>\r\n                    <Col span={4}>\r\n                      <b>{item.empPost}</b>\r\n                    </Col>\r\n\r\n                    <Col span={6}>\r\n                      <Space>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          shape=\"round\"\r\n                          onClick={() => {\r\n                            alterEmp(item.empId)\r\n                          }}\r\n                        >\r\n                          <EditOutlined />\r\n                          修改\r\n                        </Button>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          danger\r\n                          shape=\"round\"\r\n                          onClick={() => {\r\n                            delEmp(item.empId);\r\n                          }}\r\n                        >\r\n                          <DeleteOutlined />\r\n                          删除\r\n                        </Button>\r\n                      </Space>\r\n                    </Col>\r\n                  </Row>\r\n                </List.Item>\r\n              </Skeleton>\r\n            )}\r\n          />\r\n\r\n          <ConfigProvider locale={zhCN}>\r\n            <Pagination\r\n              total={num}\r\n              hideOnSinglePage={true}\r\n              showSizeChanger\r\n              showQuickJumper\r\n              showTotal={(total) => `共 ${total} 条`}\r\n              onChange={(page, pageSize) => gotoPage(page, pageSize)}\r\n              style={{ textAlign: \"center\", paddingTop: \"50px\" }}\r\n            />\r\n          </ConfigProvider>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n","E:\\project\\大三JavaEE课设\\front-end\\src\\components\\UsrPower.js",[],"E:\\project\\大三JavaEE课设\\front-end\\src\\config\\apiUrl.js",[],"E:\\project\\大三JavaEE课设\\front-end\\src\\Pages\\GoodsList.jsx",["91"],"import React, { useState, useEffect } from \"react\";\nimport {\n  List,\n  Row,\n  Col,\n  Modal,\n  message,\n  Button,\n  Space,\n  Skeleton,\n  Pagination,\n  Form,\n  Badge,\n  ConfigProvider,\n  InputNumber,\n  Input,\n} from \"antd\";\nimport zhCN from \"antd/lib/locale/zh_CN\";\n\nimport axios from \"axios\";\nimport servicePath from \"../config/apiUrl\";\nimport { DeleteOutlined, EditOutlined, AudioOutlined } from \"@ant-design/icons\";\nimport \"../static/css/GoodsList.css\";\nimport Axios from \"axios\";\nconst { confirm } = Modal;\nconst { Search } = Input;\n\nfunction GoodsList(props) {\n  const [list, setList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [goodsId, setId] = useState();\n  const [refresh, setRef] = useState(0);\n  const [visible, setVisible] = useState(false);\n  const suffix = (\n    <AudioOutlined\n      style={{\n        fontSize: 16,\n        color: \"#1890ff\",\n      }}\n    />\n  );\n  useEffect(() => {\n    getList();\n  }, [refresh]);\n  const getList = () => {\n    axios({\n      method: \"get\",\n      url: servicePath.getGoodsList,\n    }).then((res) => {\n      console.log(res);\n      setList(res.data);\n      setIsLoading(false);\n    });\n    console.log(list);\n  };\n  /**\n   * @description: 显示表单\n   * @param {*}\n   * @return {*}\n   */\n  const showCondal = (id) => {\n    setId(id);\n    setVisible(true);\n  };\n  /**\n   * @description: 跳到指定页\n   * @param {*}\n   * @return {*}\n   */\n  const gotoPage = () => {};\n  /**\n   * @description: 将货物放入回收站\n   * @param {*}\n   * @return {*}\n   */\n  const delGoods = (id, deid = 1) => {\n    confirm({\n      title: \"确定要删除这个货物吗？\",\n      content: \"删除后，将放入回收站\",\n      onOk() {\n        axios({\n          method: \"put\",\n          url: `${servicePath.toRecycle}`,\n          data: {\n            id,\n            yn_goto_recycle: deid,\n            time: new Date().getTime() / 1000,\n          },\n          withCredentials: true,\n        }).then((res) => {\n          message.success(\"文章放入回收站\");\n          getList();\n        });\n      },\n      onCancel() {\n        message.info(\"取消成功\");\n      },\n    });\n  };\n  /**\n   * @description: 表单提交后的回调函数\n   * @param {value}\n   * @return {*}\n   */\n  const onFinish = async (value) => {\n    value.id = goodsId;\n    const res = await Axios({\n      method: \"put\",\n      url: servicePath.storeToCounter,\n      data: value,\n      withCredentials: true,\n    });\n    refresh ? setRef(0) : setRef(1);\n    message.info(res.data);\n    setVisible(false);\n  };\n  const onSearch = async (value) => {\n    const res = await Axios({\n      method: \"get\",\n      url: `${servicePath.fuzzyGoods}?name=${value}`,\n      withCredentials: true,\n    });\n    setList(res.data);\n  };\n  /**\n   * @description: 关闭弹窗\n   * @param {*}\n   * @return {*}\n   */\n  const handleCancel = () => {\n    console.log(\"Clicked cancel button\");\n    setVisible(false);\n  };\n  /**\n   * @description: 更新货物\n   * @param {*}\n   * @return {*}\n   */\n  const updateGoods = (id) => {\n    props.history.push(`/home/add/${id}`);\n  };\n\n  return (\n    <div\n      style={{\n        backgroundColor: \"white\",\n        padding: \"30px 40px 60px 40px\",\n      }}\n    >\n      <Modal\n        title=\"补充柜存\"\n        visible={visible}\n        onCancel={handleCancel}\n        footer={null}\n      >\n        <Form layout=\"horizontal\" name=\"basic\" onFinish={onFinish}>\n          <Form.Item\n            label=\"上架数量\"\n            name=\"num\"\n            rules={[\n              {\n                required: true,\n                message: \"请输入上架数量!\",\n              },\n            ]}\n          >\n            <InputNumber min={0} />\n          </Form.Item>\n          <Form.Item\n            label=\"柜台价格\"\n            name=\"price\"\n            rules={[\n              {\n                required: true,\n                message: \"请输入价格!\",\n              },\n            ]}\n          >\n            <InputNumber min={0} />\n          </Form.Item>\n\n          <Form.Item\n            label=\"警告数量\"\n            name=\"alarm\"\n            rules={[\n              {\n                required: true,\n                message: \"请输入警告数量!\",\n              },\n            ]}\n          >\n            <InputNumber min={0} />\n          </Form.Item>\n          <Form.Item\n            {...{ wrapperCol: { offset: 10 } }}\n            style={{ padding: \"2rem 0 0 0\" }}\n          >\n            <Button type=\"primary\" htmlType=\"submit\">\n              确定\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n      <Search\n        placeholder=\"请输入要查询的商品名\"\n        enterButton=\"Search\"\n        size=\"large\"\n        suffix={suffix}\n        style={{ padding: \"0 0 1rem 0\" }}\n        onSearch={onSearch}\n      />\n\n      <List\n        header={\n          <Row className=\"list-div\">\n            <Col span={2}>\n              <b>编号</b>\n            </Col>\n            <Col span={4}>\n              <b>商品名称</b>\n            </Col>\n            <Col span={3}>\n              <b>商品价格</b>\n            </Col>\n            <Col span={3}>\n              <b>商品数量</b>\n            </Col>\n            <Col span={3}>\n              <b>警告数量</b>\n            </Col>\n            <Col span={5}>\n              <b>供应商</b>\n            </Col>\n            <Col span={4}>\n              <b>操作</b>\n            </Col>\n          </Row>\n        }\n        bordered\n        dataSource={list}\n        renderItem={(item, index) => (\n          <Skeleton loading={isLoading}>\n            <div onClick={() => showCondal(item.goodsId)}>\n              <Badge.Ribbon\n                text=\"上架\"\n                style={{ backgroundColor: \"#C0C0C0\" }}\n              />\n            </div>\n            <List.Item>\n              <Row className=\"list-div\">\n                <Col span={2}>\n                  <b>{index + 1}</b>\n                </Col>\n\n                <Col span={4}>\n                  <b>{item.goodsName}</b>\n                  {item.goodsNum <= item.warnNum ? (\n                    <Badge\n                      size=\"small\"\n                      title=\"缺少个数\"\n                      count={item.warnNum - item.goodsNum}\n                      offset={[3, -13]}\n                    ></Badge>\n                  ) : (\n                    \"\"\n                  )}\n                </Col>\n                <Col span={3}>\n                  <b>{item.goodsPrice}</b>\n                </Col>\n                <Col span={3}>\n                  <b>{item.goodsNum}</b>\n                </Col>\n                <Col span={3}>\n                  <b>{item.warnNum}</b>\n                </Col>\n\n                <Col span={5}>\n                  {item.supplier.supName} — {item.supplier.supContact}\n                </Col>\n                <Col span={4}>\n                  <Space>\n                    <Button\n                      type=\"primary\"\n                      shape=\"round\"\n                      onClick={() => {\n                        updateGoods(item.goodsId);\n                      }}\n                    >\n                      <EditOutlined />\n                    </Button>\n                    <Button\n                      type=\"primary\"\n                      danger\n                      shape=\"round\"\n                      onClick={() => {\n                        delGoods(item.goodsId);\n                      }}\n                    >\n                      <DeleteOutlined />\n                    </Button>\n                  </Space>\n                </Col>\n              </Row>\n            </List.Item>\n          </Skeleton>\n        )}\n      />\n\n      <ConfigProvider locale={zhCN}>\n        <Pagination\n          total={100}\n          hideOnSinglePage={true}\n          showSizeChanger\n          showQuickJumper\n          showTotal={(total) => `共 ${total} 条`}\n          onChange={(page, pageSize) => gotoPage(page, pageSize)}\n          style={{ textAlign: \"center\", paddingTop: \"40px\" }}\n        />\n      </ConfigProvider>\n    </div>\n  );\n}\n\nexport default GoodsList;\n","E:\\project\\大三JavaEE课设\\front-end\\src\\Pages\\AddGoods.jsx",["92","93","94"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Radio,\r\n  Select,\r\n  InputNumber,\r\n  message,\r\n  Skeleton,\r\n} from \"antd\";\r\nimport Axios from \"axios\";\r\nimport servicePath from \"../config/apiUrl\";\r\nexport default function AddGoods(props) {\r\n  const [componentSize, setComponentSize] = useState(\"default\");\r\n  const [suppliers, setSuppliers] = useState([]);\r\n  const [goodsId, setGoodsId] = useState(0); //  货物ID，如果是 0 说明是增加 ，其他就代表修改\r\n  const [goodsName, setName] = useState(\"\"); //  货物名\r\n  const [goodsPrice, setPrice] = useState(); //  价格\r\n  const [goodsNum, setNum] = useState(); //  数量\r\n  const [sup, setSup] = useState(); // 供应商 id\r\n  const [alarmNum, setAlarm] = useState(); //  警告数量\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const onFormLayoutChange = ({ size }) => {\r\n    setComponentSize(size);\r\n  };\r\n\r\n  var id = props.match.params.id; //获取货物id，如果有就是修改，没有就是插入\r\n\r\n  /**\r\n   * @description: 根据是否存在id判断是插入还是更新\r\n   * @param {*}\r\n   * @return {*}\r\n   */\r\n  useEffect(() => {\r\n    getSupplier();\r\n    if (id) {\r\n      setGoodsId(id);\r\n      getGoodsById(id);\r\n    } else {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      console.log(\"-----sup-----\");\r\n      console.log(sup);\r\n      console.log(\"-----suppliers-----\");\r\n      console.log(suppliers);\r\n    };\r\n  }, []);\r\n  /**\r\n   * @description: 获取所有供货商\r\n   * @param {*}\r\n   * @return {*}\r\n   */\r\n  const getSupplier = async () => {\r\n    const res = await Axios(servicePath.getSupplier);\r\n    console.log(\"---getSupplier---\");\r\n    console.log(res);\r\n    setSuppliers(res.data);\r\n  };\r\n  /**\r\n   * @description: 根据id查询对应的货物\r\n   * @param {id}\r\n   * @return {*}\r\n   */\r\n  const getGoodsById = async (id) => {\r\n    const res = await Axios({\r\n      url: `${servicePath.goods}/${id}`,\r\n      method: \"get\",\r\n      withCredentials: true,\r\n    });\r\n    console.log(res);\r\n\r\n    setPrice(res.data.goodsPrice); // 价格\r\n    setNum(res.data.goodsNum); // 数量\r\n    setName(res.data.goodsName); // 货物名\r\n    setAlarm(res.data.warnNum); // 警告数量\r\n    setSup(res.data.supId);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  /**\r\n   * @description: 表单提交时侯的校验函数\r\n   * @param {*}\r\n   * @return {*}\r\n   */\r\n  const onFinish = (value) => {\r\n    console.log(\"----onFinish----\");\r\n    console.log(value);\r\n    id ? alterGoods(value) : addGoods(value);\r\n  };\r\n  const alterGoods = (value) => {\r\n    value.id = goodsId;\r\n    const res = Axios({\r\n      method: \"put\",\r\n      url: servicePath.goods,\r\n      data: value,\r\n      withCredentials: true,\r\n    });\r\n    props.history.push(\"/home/list\");\r\n  };\r\n  const addGoods = (value) => {\r\n    Axios({\r\n      method: \"post\",\r\n      url: servicePath.goods,\r\n      data: value,\r\n      withCredentials: true,\r\n    })\r\n      .then(() => {\r\n        message.success(\"添加成功\");\r\n        props.history.push(\"/home/list\");\r\n      })\r\n      .catch(() => {\r\n        message.error(\"添加失败\");\r\n      });\r\n  };\r\n\r\n  const selectedSupplier = (value, option) => {\r\n    console.log(option);\r\n    // setSup(value);\r\n    console.log(sup);\r\n  };\r\n  return (\r\n    <div style={{ backgroundColor: \"white\", padding: \"60px 0 40px 0\" }}>\r\n      <Skeleton active loading={isLoading} title paragraph>\r\n        <Form\r\n          onFinish={onFinish}\r\n          labelCol={{ span: 4 }}\r\n          wrapperCol={{ span: 14 }}\r\n          layout=\"horizontal\"\r\n          initialValues={{ size: componentSize }}\r\n          onValuesChange={onFormLayoutChange}\r\n          size={componentSize}\r\n        >\r\n          <Form.Item label=\"表单大小\" name=\"size\">\r\n            <Radio.Group>\r\n              <Radio.Button value=\"small\">小</Radio.Button>\r\n              <Radio.Button value=\"default\">中</Radio.Button>\r\n              <Radio.Button value=\"large\">大</Radio.Button>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"货物名\"\r\n            initialValue={goodsName}\r\n            name=\"goods_name\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"请输入货物名称\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input onChange={(v) => setName(v)} />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"价格\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"请设置价格\",\r\n              },\r\n            ]}\r\n          >\r\n            <Form.Item\r\n              noStyle\r\n              name=\"goods_price\"\r\n              initialValue={goodsPrice}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"请设置价格\",\r\n                },\r\n              ]}\r\n            >\r\n              <InputNumber min={0} onChange={(v) => setPrice(v)} />\r\n            </Form.Item>\r\n            <span className=\"antd-form-text\" style={{ margin: \"0 0 0 0.5rem\" }}>\r\n              元\r\n            </span>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"数量\"\r\n            name=\"goods_num\"\r\n            initialValue={goodsNum}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"请输入货物数量\",\r\n              },\r\n            ]}\r\n          >\r\n            <InputNumber min={0} onChange={(v) => setNum(v)} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"供应商\"\r\n            name=\"goods_supplier\"\r\n            initialValue={sup}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"请选择供应商\",\r\n              },\r\n            ]}\r\n          >\r\n            <Select onChange={selectedSupplier}>\r\n              {suppliers.map((v, i) => (\r\n                <Select.Option value={v.supId} key={v.supId}>\r\n                  {v.supName +\r\n                    \"——————\" +\r\n                    v.supContact +\r\n                    \"——————\" +\r\n                    v.supPhone +\r\n                    \"——————\" +\r\n                    v.adress}\r\n                </Select.Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"警告数量\"\r\n            name=\"calarm_num\"\r\n            initialValue={alarmNum}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"请设置警告数量\",\r\n              },\r\n            ]}\r\n          >\r\n            <InputNumber min={0} onChange={(v) => setAlarm(v)} />\r\n          </Form.Item>\r\n          <Form.Item {...{ wrapperCol: { offset: 8 } }}>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n            >\r\n              确定\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Skeleton>\r\n    </div>\r\n  );\r\n}\r\n","E:\\project\\大三JavaEE课设\\front-end\\src\\Pages\\CounterList.jsx",[],"E:\\project\\大三JavaEE课设\\front-end\\src\\Pages\\RecycleList.jsx",["95","96","97","98","99"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  List,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  message,\r\n  Button,\r\n  Space,\r\n  Skeleton,\r\n  Pagination,\r\n  Badge,\r\n  ConfigProvider,\r\n  Input,\r\n} from \"antd\";\r\nimport zhCN from \"antd/lib/locale/zh_CN\";\r\n\r\nimport axios from \"axios\";\r\nimport servicePath from \"../config/apiUrl\";\r\nimport {\r\n  DeleteOutlined,\r\n  AudioOutlined,\r\n  RollbackOutlined,\r\n} from \"@ant-design/icons\";\r\nimport \"../static/css/GoodsList.css\";\r\nimport \"../static/css/ArticleList.css\";\r\n\r\nconst { confirm } = Modal;\r\nconst { Search } = Input;\r\n\r\nfunction RecycleList(props) {\r\n  const [list, setList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [goodsId, setId] = useState();\r\n  const [refresh, setRef] = useState(0);\r\n  const suffix = (\r\n    <AudioOutlined\r\n      style={{\r\n        fontSize: 16,\r\n        color: \"#1890ff\",\r\n      }}\r\n    />\r\n  );\r\n  useEffect(() => {\r\n    getList();\r\n  }, [refresh]);\r\n  const getList = () => {\r\n    const token = localStorage.getItem('token')\r\n    axios({\r\n      method: \"get\",\r\n      url: servicePath.toRecycle,\r\n      headers:{\"token\":token}\r\n    }).then((res) => {\r\n      setList(res.data);\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * @description: 跳到指定页\r\n   * @param {*}\r\n   * @return {*}\r\n   */\r\n  const gotoPage = () => {};\r\n  /**\r\n   * @description: 将货物放入回收站\r\n   * @param {*}\r\n   * @return {*}\r\n   */\r\n  const delGoods = (id) => {\r\n    confirm({\r\n      title: \"确定要删除这个货物吗？\",\r\n      content: \"删除后，货物信息将无法找回\",\r\n      onOk() {\r\n        axios({\r\n          method: \"delete\",\r\n          url: `${servicePath.goods}`,\r\n          data: { id },\r\n          withCredentials: true,\r\n        }).then((res) => {\r\n          message.success(\"删除成功\");\r\n          getList();\r\n        });\r\n      },\r\n      onCancel() {\r\n        message.info(\"取消成功\");\r\n      },\r\n    });\r\n  };\r\n\r\n  /**\r\n   * @description: 撤回到货物列表中\r\n   * @param {*}\r\n   * @return {*}\r\n   */\r\n  const ToGoods = (id, deid = 0) => {\r\n    axios({\r\n      method: \"put\",\r\n      url: `${servicePath.toRecycle}`,\r\n      data: {\r\n        id,\r\n        yn_goto_recycle: deid,\r\n      },\r\n      withCredentials: true,\r\n    }).then((res) => {\r\n      message.success(\"撤回成功\");\r\n      getList();\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundColor: \"white\",\r\n        padding: \"30px 40px 60px 40px\",\r\n      }}\r\n    >\r\n      <List\r\n        header={\r\n          <Row className=\"list-div\">\r\n            <Col span={2}>\r\n              <b>编号</b>\r\n            </Col>\r\n            <Col span={4}>\r\n              <b>商品名称</b>\r\n            </Col>\r\n            <Col span={3}>\r\n              <b>商品价格</b>\r\n            </Col>\r\n            <Col span={3}>\r\n              <b>商品数量</b>\r\n            </Col>\r\n            <Col span={3}>\r\n              <b>警告数量</b>\r\n            </Col>\r\n            <Col span={5}>\r\n              <b>供应商</b>\r\n            </Col>\r\n            <Col span={4}>\r\n              <b>操作</b>\r\n            </Col>\r\n          </Row>\r\n        }\r\n        bordered\r\n        dataSource={list}\r\n        renderItem={(item, index) => (\r\n          <Skeleton loading={isLoading}>\r\n            <List.Item>\r\n              <Row className=\"list-div\">\r\n                <Col span={2}>\r\n                  <b>{index + 1}</b>\r\n                </Col>\r\n\r\n                <Col span={4}>\r\n                  <b>{item.goodsName}</b>\r\n                  {item.goodsNum <= item.warnNum ? (\r\n                    <Badge\r\n                      size=\"small\"\r\n                      title=\"缺少个数\"\r\n                      count={item.warnNum - item.goodsNum}\r\n                      offset={[3, -13]}\r\n                    ></Badge>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Col>\r\n                <Col span={3}>\r\n                  <b>{item.goodsPrice}</b>\r\n                </Col>\r\n                <Col span={3}>\r\n                  <b>{item.goodsNum}</b>\r\n                </Col>\r\n                <Col span={3}>\r\n                  <b>{item.warnNum}</b>\r\n                </Col>\r\n\r\n                <Col span={5}>\r\n                  {item.supplier.supName} — {item.supplier.supContact}\r\n                </Col>\r\n                <Col span={4}>\r\n                  <Space>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      shape=\"round\"\r\n                      ghost\r\n                      onClick={() => {\r\n                        ToGoods(item.goodsId);\r\n                      }}\r\n                    >\r\n                      <RollbackOutlined />\r\n                    </Button>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      danger\r\n                      shape=\"round\"\r\n                      onClick={() => {\r\n                        delGoods(item.goodsId);\r\n                      }}\r\n                    >\r\n                      <DeleteOutlined />\r\n                    </Button>\r\n                  </Space>\r\n                </Col>\r\n              </Row>\r\n            </List.Item>\r\n          </Skeleton>\r\n        )}\r\n      />\r\n\r\n      <ConfigProvider locale={zhCN}>\r\n        <Pagination\r\n          total={100}\r\n          hideOnSinglePage={true}\r\n          showSizeChanger\r\n          showQuickJumper\r\n          showTotal={(total) => `共 ${total} 条`}\r\n          onChange={(page, pageSize) => gotoPage(page, pageSize)}\r\n          style={{ textAlign: \"center\", paddingTop: \"40px\" }}\r\n        />\r\n      </ConfigProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecycleList;\r\n","E:\\project\\大三JavaEE课设\\front-end\\src\\components\\AuthorSign.js",["100"],"/*\r\n * @Author: lyc\r\n * @Date: 2020-12-03 19:20:14\r\n * @LastEditors: lyc\r\n * @LastEditTime: 2020-12-05 21:19:12\r\n * @Description: file content\r\n */\r\n\r\nimport React from \"react\"\r\nexport default () => (\r\n  <>\r\n    <center>\r\n      <h2>Joey</h2>\r\n      <h3>天上灯火，皆为星辰</h3>\r\n    </center>\r\n  </>\r\n)",["101","102"],"E:\\project\\大三JavaEE课设\\front-end\\src\\components\\Descripter.js",["103","104"],"/*\r\n * @Author: lyc\r\n * @Date: 2020-12-03 19:13:16\r\n * @LastEditors: lyc\r\n * @LastEditTime: 2020-12-16 14:07:28\r\n * @Description: file content\r\n */\r\nimport React, { useContext, useEffect } from \"react\"\r\nimport { Space } from 'antd'\r\nimport { UserOutlined, QqOutlined, HomeOutlined, FieldStringOutlined } from '@ant-design/icons';\r\nimport { DetailContext } from './Author'\r\nexport default () => {\r\n  const user = useContext(DetailContext)\r\n\r\n  return (\r\n    <>\r\n      <div style={{ padding: \"1rem 0 0 0\" }}>\r\n        <Space direction=\"vertical\" size=\"small\">\r\n\r\n          <div style={{ margin: \"0 0 5px 0\" }}>\r\n            {/* 职业 */}\r\n            <UserOutlined style={{ padding: \"0 12px 0 0 \" }} />\r\n            <span>{user.name}</span>\r\n          </div>\r\n          <div style={{ margin: \"0 0 5px 0\" }}>\r\n            <QqOutlined style={{ padding: \"0 12px 0 0 \" }} />\r\n            <span>934781829</span>\r\n          </div>\r\n          <div style={{ margin: \"0 0 5px 0\" }}>\r\n            <FieldStringOutlined style={{ margin: \"0 13px 0 0\" }} />\r\n            <span>{user.career}</span>\r\n          </div>\r\n          <div>\r\n            <HomeOutlined style={{ padding: \"0 12px 0 0 \" }} />\r\n            <span>乌利马尔拉赫蒂妮斯州</span>\r\n          </div>\r\n        </Space>\r\n      </div>\r\n      <b></b>\r\n    </>\r\n  )\r\n}",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":2,"column":43,"nodeType":"111","messageId":"112","endLine":2,"endColumn":49},{"ruleId":"109","severity":1,"message":"113","line":7,"column":3,"nodeType":"111","messageId":"112","endLine":7,"endColumn":15},{"ruleId":"109","severity":1,"message":"114","line":18,"column":8,"nodeType":"111","messageId":"112","endLine":18,"endColumn":15},{"ruleId":"115","severity":1,"message":"116","line":45,"column":5,"nodeType":"117","messageId":"118","endLine":61,"endColumn":6},{"ruleId":"115","severity":1,"message":"116","line":73,"column":5,"nodeType":"117","messageId":"118","endLine":83,"endColumn":6},{"ruleId":"115","severity":1,"message":"116","line":88,"column":5,"nodeType":"117","messageId":"118","endLine":95,"endColumn":6},{"ruleId":"109","severity":1,"message":"119","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":26},{"ruleId":"120","severity":1,"message":"121","line":57,"column":19,"nodeType":"122","messageId":"123","endLine":57,"endColumn":21},{"ruleId":"109","severity":1,"message":"124","line":15,"column":3,"nodeType":"111","messageId":"112","endLine":15,"endColumn":14},{"ruleId":"125","severity":1,"message":"126","line":44,"column":6,"nodeType":"127","endLine":44,"endColumn":15,"suggestions":"128"},{"ruleId":"125","severity":1,"message":"129","line":44,"column":6,"nodeType":"127","endLine":44,"endColumn":8,"suggestions":"130"},{"ruleId":"125","severity":1,"message":"131","line":53,"column":6,"nodeType":"127","endLine":53,"endColumn":8,"suggestions":"132"},{"ruleId":"109","severity":1,"message":"133","line":98,"column":11,"nodeType":"111","messageId":"112","endLine":98,"endColumn":14},{"ruleId":"109","severity":1,"message":"134","line":29,"column":9,"nodeType":"111","messageId":"112","endLine":29,"endColumn":15},{"ruleId":"109","severity":1,"message":"135","line":34,"column":10,"nodeType":"111","messageId":"112","endLine":34,"endColumn":17},{"ruleId":"109","severity":1,"message":"136","line":34,"column":19,"nodeType":"111","messageId":"112","endLine":34,"endColumn":24},{"ruleId":"109","severity":1,"message":"137","line":35,"column":19,"nodeType":"111","messageId":"112","endLine":35,"endColumn":25},{"ruleId":"109","severity":1,"message":"138","line":36,"column":9,"nodeType":"111","messageId":"112","endLine":36,"endColumn":15},{"ruleId":"139","severity":1,"message":"140","line":10,"column":1,"nodeType":"141","endLine":17,"endColumn":2},{"ruleId":"105","replacedBy":"142"},{"ruleId":"107","replacedBy":"143"},{"ruleId":"109","severity":1,"message":"119","line":8,"column":29,"nodeType":"111","messageId":"112","endLine":8,"endColumn":38},{"ruleId":"139","severity":1,"message":"140","line":12,"column":1,"nodeType":"141","endLine":42,"endColumn":2},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'UserOutlined' is defined but never used.","'EmpList' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'InputNumber' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getList'. Either include it or remove the dependency array.","ArrayExpression",["146"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["147"],"React Hook useEffect has missing dependencies: 'sup' and 'suppliers'. Either include them or remove the dependency array.",["148"],"'res' is assigned a value but never used.","'Search' is assigned a value but never used.","'goodsId' is assigned a value but never used.","'setId' is assigned a value but never used.","'setRef' is assigned a value but never used.","'suffix' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["144"],["145"],"no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [getList, refresh]",{"range":"155","text":"156"},"Update the dependencies array to be: [id]",{"range":"157","text":"158"},"Update the dependencies array to be: [sup, suppliers]",{"range":"159","text":"160"},[947,956],"[getList, refresh]",[1180,1182],"[id]",[1378,1380],"[sup, suppliers]"]